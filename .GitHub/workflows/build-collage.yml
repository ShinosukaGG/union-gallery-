name: Build Collage

on:
  workflow_dispatch: {}   # Run it manually from the Actions tab
  push:
    paths:
      - "**/*.png"
      - "**/*.jpg"
      - "**/*.jpeg"

permissions:
  contents: write   # allow pushing the generated collage back to the repo

jobs:
  make-collage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pillow

      - name: Build collage
        shell: bash
        run: |
          cat > collage.py << 'PY'
          import os, math, io
          from PIL import Image, ImageOps

          # Collect images recursively
          exts = {".png", ".jpg", ".jpeg"}
          files = []
          for root, _, fns in os.walk("."):
            for f in fns:
              if os.path.splitext(f.lower())[1] in exts:
                p = os.path.join(root, f)
                # Skip common non-content folders
                if "/.git/" in p or p.startswith("./.git"):
                  continue
                files.append(p)

          # Remove the previously generated collage if present
          files = [p for p in files if os.path.basename(p) != "collage.jpg"]

          if not files:
            raise SystemExit("No images found.")

          files.sort(key=lambda p: p.lower())

          # Target final width in pixels (adjustable)
          TARGET_WIDTH = 8000  # large & crisp
          N = len(files)
          cols = math.ceil(math.sqrt(N))
          thumb_w = max(80, TARGET_WIDTH // cols)
          thumb_h = thumb_w  # square thumbs for a clean grid

          # Compute rows
          rows = math.ceil(N / cols)
          W = cols * thumb_w
          H = rows * thumb_h

          bg = (0, 0, 0)  # black background
          collage = Image.new("RGB", (W, H), bg)

          def open_image_safe(path):
            im = Image.open(path)
            # Convert to RGB to normalize formats (handles PNG w/alpha)
            if im.mode in ("RGBA", "LA"):
              # paste onto black to remove transparency, preserving appearance
              rgb = Image.new("RGB", im.size, bg)
              rgb.paste(im, mask=im.split()[-1])
              im = rgb
            else:
              im = im.convert("RGB")
            return im

          for i, path in enumerate(files):
            try:
              im = open_image_safe(path)
            except Exception as e:
              print(f"Skip {path}: {e}")
              continue

            # Fit & crop (center) to a square thumb without distortion
            thumb = ImageOps.fit(im, (thumb_w, thumb_h), method=Image.LANCZOS, centering=(0.5, 0.5))
            x = (i % cols) * thumb_w
            y = (i // cols) * thumb_h
            collage.paste(thumb, (x, y))

          collage.save("collage.jpg", quality=92, optimize=True)
          print(f"âœ… collage.jpg created with {N} images, {cols}x{rows} grid, {W}x{H}px")
          PY

          python collage.py

      - name: Upload artifact (downloadable)
        uses: actions/upload-artifact@v4
        with:
          name: collage
          path: collage.jpg
          if-no-files-found: error
          retention-days: 14

      - name: Commit collage back to repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add collage.jpg
          git commit -m "Add generated collage" || echo "No changes to commit"
          git push
